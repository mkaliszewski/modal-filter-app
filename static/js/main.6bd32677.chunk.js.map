{"version":3,"sources":["components/navigation/toggle-button/toggle-button.component.jsx","components/shared/backdrop/backdrop.component.jsx","mock-data/mock.data.js","components/shared/icon/icon.component.jsx","components/navigation/navigation-icons.data.js","components/navigation/navbar/navbar.component.jsx","components/navigation/navigation.component.jsx","components/shared/buttons/primary-button/primary-button.component.jsx","components/main/inputs/text-input/text-input.component.jsx","components/main/table/table-row/table-row.component.jsx","components/main/table/table.component.jsx","components/main/inputs/checkbox/checkbox.component.jsx","components/main/helpers.js","components/main/inputs/multiselect-dropdown/multiselect-dropdown.component.jsx","components/main/modal/modal-multiselect/modal-multiselect.component.jsx","components/main/inputs/date-picker/helpers.js","components/main/inputs/date-picker/date-picker.context.js","components/main/inputs/date-picker/date-picker-day/date-picker-day.component.jsx","components/main/inputs/date-picker/date-picker-month/date-picker-month.component.jsx","components/main/inputs/date-picker/date-picker-nav/date-picker-nav.component.jsx","components/main/inputs/date-picker/date-picker.component.jsx","components/main/modal/modal-date/modal-date.component.jsx","components/shared/buttons/secondary-button/secondary-button.component.jsx","components/main/modal/modal.component.jsx","components/main/main.component.jsx","App.jsx","index.js"],"names":["ToggleButton","openNavbar","onClick","className","type","Backdrop","closeFunction","children","defaultProps","ICONS_NAMES","AGREEMENT_TYPES","PERNAMENT","PERIOD","TASK","AGREEMENT_OPTIONS","Object","values","JOB_TYPES","COOK","WAITER","CLEANER","HELP","SERVICE","JOB_OPTIONS","LOCATIONS","ARKADY","PASAZ","BIELANY","LOCATIONS_OPTIONS","EMPLOYEES_HEADERS","EMPLOYEES","id","name","date","Date","job","agreement","locations","INITIAL_FILTERS","startDate","endDate","jobs","agreements","employees","JOB_FILTERS","Icon","iconName","customCSSClass","BOOK","CHART","PHONE","ENVELOPE","INFO","SEARCH","SORT","CALENDAR","NEXT","PREVIOUS","icon","iconType","faAddressBook","faChartBar","faPhoneSquareAlt","faEnvelope","faInfoCircle","faSearch","faSortDown","faCalendarAlt","faChevronCircleRight","faChevronCircleLeft","getIcon","NAVIGATION_ICONS","ICON_NAME","TEXT","Navbar","isNavbarOpen","map","key","Navigation","useState","setIsNavbarOpen","PrimaryButton","buttonFunction","TextInput","placeholder","isDropdown","handeNameSearchChange","handleKeypress","undefined","onChange","onKeyPress","TableRow","isHeading","rowData","heading","index","day","getDate","month","getMonth","year","getFullYear","transformDate","loc","length","Table","data","isDataValid","employee","Checkbox","element","isChecked","elementName","event","preventDefault","toggleCheckbox","htmlFor","filterName","searchName","arr","filter","toLowerCase","includes","MultiselectDropdown","selectOptions","selectedOptions","setSelectedOptions","searchFilters","filterKey","options","searchValue","setSearchValue","filtredOptions","setFiltredOptions","useEffect","JSON","stringify","listHeight","listFixedHeight","ELEMENT_HEIGHT","dropdownHeight","filtredOptionsLength","areOptionsEqual","style","height","value","target","el","indexOf","updatedOptions","splice","handleSingleOptionSelect","ModalMultiselect","title","setModalRule","isAnyModalOpen","updateFilterValues","filtredRecords","filtredEmployees","isDropdownOpen","setIsDropdownOpen","selectedOptionsLength","every","val","fixOptions","option","firstOption","getInputValue","enPlMonths","January","February","March","April","May","June","July","August","September","October","November","December","React","createContext","focusedDate","isDateFocused","isDateSelected","isDateHovered","isDateBlocked","isFirstOrLastSelectedDate","onDateFocus","onDateHover","onDateSelect","COLORS","Day","dayLabel","contextValues","useContext","DatepickerContext","useDay","isSelected","isSelectedStartOrEnd","getTrueColor","selectedFirstOrLastColor","normalColor","selectedColor","getColors","color","background","Month","firstDayOfWeek","useMonth","days","monthLabel","label","splitedDate","split","convertedMonth","convertMonthLabelToPl","toString","NavButton","DatePicker","pickerState","focusedInput","handleDateChange","closeDropdown","clearDatePicker","useDatepicker","onDatesChange","activeMonths","goToPreviousMonthsByOneMonth","goToNextMonthsByOneMonth","currentMonth","validateNavigation","fnc","Provider","INITIAL_PICKER_STATE","START_DATE","ModalDate","setPickerState","inputValue","canDropdownBeClosed","SecondaryButton","isDisabled","disabled","Modal","filterElements","isEmployeeSelected","setIsAnyModalOpen","rule","Main","isFiltersModalOpen","setIsFiltersModalOpen","isTableVisible","setIsTableVisible","isLoading","setIsLoading","nameSearchValue","setNameSearchValue","setSearchFilters","setFiltredRecords","tableData","setTableData","closeFiltersModal","displayTable","setTimeout","filters","some","filterThroughFilters","displayFilterValues","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bd32677.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './toggle-button.styles.scss';\r\n\r\nconst ToggleButton = ({ openNavbar }) => {\r\n    return (\r\n        <button onClick={openNavbar} className=\"toggle-button\" type=\"button\">\r\n            <div className=\"toggle-button__line\" />\r\n            <div className=\"toggle-button__line\" />\r\n            <div className=\"toggle-button__line\" />\r\n        </button>\r\n    );\r\n};\r\n\r\nToggleButton.propTypes = {\r\n    openNavbar: PropTypes.func.isRequired,\r\n};\r\nexport default ToggleButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './backdrop.styles.scss';\r\n\r\nconst Backdrop = ({ closeFunction, children }) => (\r\n    <div className=\"backdrop\" onClick={closeFunction}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nBackdrop.propTypes = {\r\n    closeFunction: PropTypes.func,\r\n    children: PropTypes.string,\r\n};\r\n\r\nBackdrop.defaultProps = {\r\n    closeFunction: () => {},\r\n    children: '',\r\n};\r\n\r\nexport default Backdrop;\r\n","export const ICONS_NAMES = {\r\n    BOOK: 'book',\r\n    CHART: 'chart',\r\n    PHONE: 'phone',\r\n    ENVELOPE: 'envelope',\r\n    INFO: 'info',\r\n    SEARCH: 'search',\r\n    SORT: 'sort',\r\n    CALENDAR: 'calendar',\r\n    NEXT: 'next',\r\n    PREVIOUS: 'previous',\r\n};\r\n\r\nexport const AGREEMENT_TYPES = {\r\n    PERNAMENT: 'Umowa o pracę',\r\n    PERIOD: 'Umowa zlecenie',\r\n    TASK: 'Umowa o dzieło',\r\n};\r\n\r\nexport const AGREEMENT_OPTIONS = Object.values(AGREEMENT_TYPES);\r\n\r\nexport const JOB_TYPES = {\r\n    COOK: 'Kucharz',\r\n    WAITER: 'Kelner',\r\n    CLEANER: 'Konserwator',\r\n    HELP: 'Pomoc kuchenna',\r\n    SERVICE: 'Serwisant',\r\n};\r\n\r\nexport const JOB_OPTIONS = Object.values(JOB_TYPES);\r\n\r\nexport const LOCATIONS = {\r\n    ARKADY: 'Arkady',\r\n    PASAZ: 'Pasaż Grunwaldzki',\r\n    BIELANY: 'Aleja Bielany',\r\n};\r\n\r\nexport const LOCATIONS_OPTIONS = Object.values(LOCATIONS);\r\n\r\nexport const EMPLOYEES_HEADERS = [\r\n    'Imię i nazwisko',\r\n    'Data',\r\n    'Stanowisko',\r\n    'Warunki zatrudnienia',\r\n    'Lokalizacje',\r\n];\r\n\r\nexport const EMPLOYEES = [\r\n    {\r\n        id: 1,\r\n        name: 'Adam Adamski',\r\n        date: new Date(2020, 0, 1),\r\n        job: JOB_TYPES.COOK,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Bernadeta Bednarska',\r\n        date: new Date(2020, 1, 2),\r\n        job: JOB_TYPES.WAITER,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Cecylia Cedyńska',\r\n        date: new Date(2020, 2, 3),\r\n        job: JOB_TYPES.CLEANER,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Denis Dembski',\r\n        date: new Date(2020, 3, 4),\r\n        job: JOB_TYPES.HELP,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Ernest Etstkowski',\r\n        date: new Date(2020, 4, 5),\r\n        job: JOB_TYPES.SERVICE,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Franciszek Fretka',\r\n        date: new Date(2020, 5, 6),\r\n        job: JOB_TYPES.COOK,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Grażyna Gasiuk',\r\n        date: new Date(2020, 6, 7),\r\n        job: JOB_TYPES.WAITER,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Henryk Henrykowski',\r\n        date: new Date(2020, 7, 8),\r\n        job: JOB_TYPES.CLEANER,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Irena Isierska',\r\n        date: new Date(2020, 8, 9),\r\n        job: JOB_TYPES.HELP,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Jakub Jędrzychowski',\r\n        date: new Date(2020, 9, 10),\r\n        job: JOB_TYPES.SERVICE,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Katarzyna Katarska',\r\n        date: new Date(2020, 10, 11),\r\n        job: JOB_TYPES.COOK,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Lucjan Lukrowicz',\r\n        date: new Date(2020, 11, 12),\r\n        job: JOB_TYPES.WAITER,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Mikołaj Miłosławski',\r\n        date: new Date(2020, 0, 13),\r\n        job: JOB_TYPES.CLEANER,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Nicol Niżna',\r\n        date: new Date(2020, 1, 14),\r\n        job: JOB_TYPES.HELP,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'Oskar Oparski',\r\n        date: new Date(2020, 2, 15),\r\n        job: JOB_TYPES.SERVICE,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Patryk Przybylski',\r\n        date: new Date(2020, 3, 16),\r\n        job: JOB_TYPES.COOK,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'Roksana Rusiecka',\r\n        date: new Date(2020, 4, 17),\r\n        job: JOB_TYPES.WAITER,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Sabina Sadowska',\r\n        date: new Date(2020, 5, 18),\r\n        job: JOB_TYPES.CLEANER,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 19,\r\n        name: 'Tomasz Tokarz',\r\n        date: new Date(2020, 6, 19),\r\n        job: JOB_TYPES.HELP,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 20,\r\n        name: 'Urszula Uniejska',\r\n        date: new Date(2020, 7, 20),\r\n        job: JOB_TYPES.SERVICE,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 21,\r\n        name: 'Waldemar Wolski',\r\n        date: new Date(2020, 8, 21),\r\n        job: JOB_TYPES.COOK,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n    {\r\n        id: 22,\r\n        name: 'Zofia Zamojska',\r\n        date: new Date(2020, 9, 22),\r\n        job: JOB_TYPES.WAITER,\r\n        agreement: AGREEMENT_TYPES.PERNAMENT,\r\n        locations: [LOCATIONS.ARKADY],\r\n    },\r\n    {\r\n        id: 23,\r\n        name: 'Adrianna Adamska',\r\n        date: new Date(2020, 10, 23),\r\n        job: JOB_TYPES.CLEANER,\r\n        agreement: AGREEMENT_TYPES.PERIOD,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ],\r\n    },\r\n    {\r\n        id: 24,\r\n        name: 'Tomasz Adamski',\r\n        date: new Date(2020, 11, 24),\r\n        job: JOB_TYPES.HELP,\r\n        agreement: AGREEMENT_TYPES.TASK,\r\n        locations: [LOCATIONS.ARKADY, LOCATIONS.PASAZ, LOCATIONS.BIELANY],\r\n    },\r\n];\r\n\r\nexport const MODAL_CONTENT = [\r\n    {\r\n        title: 'Stanowiska',\r\n        options: Object.values(JOB_TYPES),\r\n    },\r\n    {\r\n        title: 'Lokalizacje',\r\n        options: Object.values(LOCATIONS),\r\n    },\r\n    {\r\n        title: 'Pracownicy',\r\n        options: EMPLOYEES,\r\n    },\r\n    {\r\n        title: 'Warunki zatrudnienia',\r\n        options: Object.values(AGREEMENT_TYPES),\r\n    },\r\n];\r\n\r\nexport const INITIAL_FILTERS = {\r\n    date: {\r\n        startDate: null,\r\n        endDate: null,\r\n    },\r\n    jobs: [],\r\n    locations: [],\r\n    agreements: [],\r\n    employees: [],\r\n};\r\n\r\nexport const JOB_FILTERS = {\r\n    date: {\r\n        startDate: null,\r\n        endDate: null,\r\n    },\r\n    jobs: [],\r\n    locations: [],\r\n    agreements: [],\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faAddressBook,\r\n    faChartBar,\r\n    faPhoneSquareAlt,\r\n    faEnvelope,\r\n    faInfoCircle,\r\n    faSearch,\r\n    faSortDown,\r\n    faCalendarAlt,\r\n    faChevronCircleRight,\r\n    faChevronCircleLeft,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ICONS_NAMES } from '../../../mock-data/mock.data';\r\nimport './icon.styles.scss';\r\n\r\nconst Icon = ({ iconName, customCSSClass }) => {\r\n    const {\r\n        BOOK,\r\n        CHART,\r\n        PHONE,\r\n        ENVELOPE,\r\n        INFO,\r\n        SEARCH,\r\n        SORT,\r\n        CALENDAR,\r\n        NEXT,\r\n        PREVIOUS,\r\n    } = ICONS_NAMES;\r\n\r\n    const getIcon = (iconType) => {\r\n        switch (iconType) {\r\n            case BOOK:\r\n                return faAddressBook;\r\n            case CHART:\r\n                return faChartBar;\r\n            case PHONE:\r\n                return faPhoneSquareAlt;\r\n            case ENVELOPE:\r\n                return faEnvelope;\r\n            case INFO:\r\n                return faInfoCircle;\r\n            case SEARCH:\r\n                return faSearch;\r\n            case SORT:\r\n                return faSortDown;\r\n            case CALENDAR:\r\n                return faCalendarAlt;\r\n            case NEXT:\r\n                return faChevronCircleRight;\r\n            case PREVIOUS:\r\n                return faChevronCircleLeft;\r\n            default:\r\n                return faInfoCircle;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FontAwesomeIcon\r\n            icon={getIcon(iconName)}\r\n            className={customCSSClass ? `icon--${customCSSClass}` : 'icon'}\r\n        />\r\n    );\r\n};\r\n\r\nIcon.propTypes = {\r\n    iconName: PropTypes.string,\r\n    customCSSClass: PropTypes.string,\r\n};\r\n\r\nIcon.defaultProps = {\r\n    iconName: '',\r\n    customCSSClass: '',\r\n};\r\n\r\nexport default Icon;\r\n","export const NAVIGATION_ICONS = [\r\n    {\r\n        ICON_NAME: 'book',\r\n        TEXT: 'Pracownicy',\r\n    },\r\n    {\r\n        ICON_NAME: 'chart',\r\n        TEXT: 'Analiza',\r\n    },\r\n    {\r\n        ICON_NAME: 'phone',\r\n        TEXT: 'Kontakty',\r\n    },\r\n    {\r\n        ICON_NAME: 'envelope',\r\n        TEXT: 'Wiadomości',\r\n    },\r\n];\r\n","import React from 'react';\r\nimport './navbar.styles.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '../../shared/icon/icon.component';\r\nimport { NAVIGATION_ICONS } from '../navigation-icons.data';\r\n\r\nconst Navbar = ({ isNavbarOpen }) => (\r\n    <nav className={`navbar ${isNavbarOpen && 'navbar--open'}`}>\r\n        <ul className=\"navbar__list\">\r\n            {NAVIGATION_ICONS.map(({ ICON_NAME, TEXT }) => (\r\n                <li className=\"navbar__item\" key={ICON_NAME}>\r\n                    <Icon iconName={ICON_NAME} />\r\n                    <span>{TEXT}</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nNavbar.propTypes = {\r\n    isNavbarOpen: PropTypes.bool.isRequired,\r\n};\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport './navigation.styles.scss';\r\nimport ToggleButton from './toggle-button/toggle-button.component';\r\nimport Backdrop from '../shared/backdrop/backdrop.component';\r\nimport Navbar from './navbar/navbar.component';\r\n\r\nconst Navigation = () => {\r\n    const [isNavbarOpen, setIsNavbarOpen] = useState(false);\r\n\r\n    const openNavbar = () => {\r\n        setIsNavbarOpen(true);\r\n    };\r\n\r\n    const closeNavbar = () => {\r\n        setIsNavbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToggleButton openNavbar={openNavbar} />\r\n            <Navbar isNavbarOpen={isNavbarOpen} />\r\n            {isNavbarOpen && <Backdrop closeFunction={closeNavbar} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './primary-button.styles.scss';\r\n\r\nconst PrimaryButton = ({ children, buttonFunction }) => {\r\n    return (\r\n        <button\r\n            onClick={buttonFunction}\r\n            type=\"button\"\r\n            className=\"primary-button\"\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nPrimaryButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    buttonFunction: PropTypes.func,\r\n};\r\n\r\nPrimaryButton.defaultProps = {\r\n    buttonFunction: () => {},\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '../../../shared/icon/icon.component';\r\nimport { ICONS_NAMES } from '../../../../mock-data/mock.data';\r\n\r\nimport './text-input.styles.scss';\r\n\r\nconst TextInput = ({\r\n    placeholder,\r\n    isDropdown,\r\n    handeNameSearchChange,\r\n    handleKeypress,\r\n}) => (\r\n    <div className={isDropdown ? 'text-input--container' : undefined}>\r\n        {isDropdown && (\r\n            <Icon\r\n                iconName={ICONS_NAMES.SEARCH}\r\n                customCSSClass={ICONS_NAMES.SEARCH}\r\n            />\r\n        )}\r\n        <input\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            className={isDropdown ? 'text-input--dropdown' : 'text-input'}\r\n            onChange={handeNameSearchChange}\r\n            onKeyPress={handleKeypress}\r\n        />\r\n    </div>\r\n);\r\n\r\nTextInput.propTypes = {\r\n    placeholder: PropTypes.string.isRequired,\r\n    isDropdown: PropTypes.bool,\r\n    handeNameSearchChange: PropTypes.func,\r\n    handleKeypress: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n    isDropdown: false,\r\n    handeNameSearchChange: () => {},\r\n    handleKeypress: () => {},\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '../../../shared/icon/icon.component';\r\nimport './table-row.styles.scss';\r\nimport { ICONS_NAMES } from '../../../../mock-data/mock.data';\r\n\r\nconst TableRow = ({ isHeading, rowData }) => {\r\n    const transformDate = (date) => {\r\n        const day = date.getDate();\r\n        const month = date.getMonth() + 1;\r\n        const year = date.getFullYear();\r\n\r\n        return `${day}/${month < 10 ? `0${month}` : month}/${year}`;\r\n    };\r\n\r\n    return (\r\n        <tr\r\n            className={`table-row ${\r\n                isHeading ? 'table-row--heading' : 'table-row--default'\r\n            }`}\r\n        >\r\n            {isHeading ? (\r\n                <>\r\n                    {rowData.map((heading, index) => (\r\n                        <th\r\n                            className={\r\n                                index > 0\r\n                                    ? `table-row__cell-heading--high`\r\n                                    : undefined\r\n                            }\r\n                            key={heading}\r\n                        >\r\n                            {heading}\r\n                        </th>\r\n                    ))}\r\n\r\n                    <th className=\"table-row__cell-heading--low\">Szczegóły</th>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <td>{rowData.name}</td>\r\n                    <td className=\"table-row__cell--high\">\r\n                        {transformDate(rowData.date)}\r\n                    </td>\r\n                    <td className=\"table-row__cell--high\" key={rowData.job}>\r\n                        {rowData.job}\r\n                    </td>\r\n                    <td className=\"table-row__cell--high\">\r\n                        {rowData.agreement}\r\n                    </td>\r\n                    <td className=\"table-row__cell--high\">\r\n                        {rowData.locations.map((loc, index) => {\r\n                            if (index === rowData.locations.length - 1) {\r\n                                return loc;\r\n                            }\r\n                            return `${loc}, `;\r\n                        })}\r\n                    </td>\r\n                    <td className=\"table-row__cell--low\">\r\n                        <Icon iconName={ICONS_NAMES.INFO} />\r\n                    </td>\r\n                </>\r\n            )}\r\n        </tr>\r\n    );\r\n};\r\n\r\nTableRow.propTypes = {\r\n    isHeading: PropTypes.bool,\r\n    rowData: PropTypes.oneOfType(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            date: PropTypes.instanceOf(Date).isRequired,\r\n            job: PropTypes.string.isRequired,\r\n            agreement: PropTypes.string.isRequired,\r\n            locations: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        }),\r\n        PropTypes.arrayOf(PropTypes.string.isRequired)\r\n    ).isRequired,\r\n};\r\n\r\nTableRow.defaultProps = {\r\n    isHeading: false,\r\n};\r\n\r\nTableRow.propTypes = {};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableRow from './table-row/table-row.component';\r\nimport { EMPLOYEES_HEADERS } from '../../../mock-data/mock.data';\r\nimport './table.styles.scss';\r\n\r\nconst Table = ({ data }) => {\r\n    const isDataValid = !!data.length;\r\n\r\n    return (\r\n        <table className=\"table-custom\">\r\n            <thead className=\"table-custom__thead\">\r\n                <TableRow rowData={EMPLOYEES_HEADERS} isHeading />\r\n            </thead>\r\n            <tbody\r\n                className={`table-custom__tbody ${\r\n                    !isDataValid ? 'table-custom__body--empty' : undefined\r\n                }`}\r\n            >\r\n                {isDataValid ? (\r\n                    data.map((employee) => (\r\n                        <TableRow rowData={employee} key={employee.id} />\r\n                    ))\r\n                ) : (\r\n                    <tr>\r\n                        <td>Brak wyników spełniających wymagania</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n            <tfoot className=\"table-custom__tfoot\">\r\n                <tr>\r\n                    <td>Suma rekordów wynosi: {data.length}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            date: PropTypes.instanceOf(Date).isRequired,\r\n            job: PropTypes.string.isRequired,\r\n            agreement: PropTypes.string.isRequired,\r\n            locations: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nTable.defaultProps = {\r\n    data: [],\r\n};\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './checkbox.styles.scss';\r\n\r\nconst Checkbox = ({ element, isChecked }) => {\r\n    const elementName = element?.name ? element.name : element;\r\n\r\n    const toggleCheckbox = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkbox\" onClick={(event) => toggleCheckbox(event)}>\r\n            <label\r\n                htmlFor={elementName}\r\n                className={`checkbox__label ${\r\n                    isChecked ? 'checkbox__label--checked' : undefined\r\n                }`}\r\n            >\r\n                {elementName}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id={elementName}\r\n                    className=\"checkbox__input\"\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","export const filterName = (searchName, arr) =>\r\n    arr.filter((element) => {\r\n        const elementName = element?.name ? element.name : element;\r\n        return searchName\r\n            ? elementName.toLowerCase().includes(searchName.toLowerCase())\r\n            : element;\r\n    });\r\n\r\nexport const filterThroughFilters = (filters, arr) => {\r\n    const {\r\n        date: { startDate, endDate },\r\n        jobs,\r\n        locations,\r\n        agreements,\r\n    } = filters;\r\n\r\n    const filterStartDate = (element) =>\r\n        startDate ? element.date >= startDate : element;\r\n    const filterEndDate = (element) =>\r\n        endDate ? element.date <= endDate : element;\r\n\r\n    const filterJobs = (element) =>\r\n        jobs.length ? jobs.includes(element.job) : element;\r\n\r\n    const filterLocations = (element) =>\r\n        locations.length\r\n            ? locations.some((loc) => element.locations.includes(loc))\r\n            : element;\r\n\r\n    const filterAgreements = (element) =>\r\n        agreements.length ? agreements.includes(element.agreement) : element;\r\n\r\n    return arr\r\n        .filter(filterStartDate)\r\n        .filter(filterEndDate)\r\n        .filter(filterJobs)\r\n        .filter(filterLocations)\r\n        .filter(filterAgreements);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../checkbox/checkbox.component';\r\nimport TextInput from '../text-input/text-input.component';\r\nimport { filterName } from '../../helpers';\r\nimport { JOB_FILTERS } from '../../../../mock-data/mock.data';\r\nimport './multiselect-dropdown.styles.scss';\r\n\r\nconst INITIAL_HEIGHT = 80;\r\nconst ELEMENT_HEIGHT = 40;\r\nconst MAX_EEMENT_NUM = 4;\r\nconst OFFSET = 1;\r\nconst MAX_LIST_HEIGHT = ELEMENT_HEIGHT * MAX_EEMENT_NUM + OFFSET;\r\n\r\nconst MultiselectDropdown = ({\r\n    selectOptions,\r\n    selectedOptions,\r\n    setSelectedOptions,\r\n    searchFilters,\r\n    filterKey,\r\n    employees,\r\n}) => {\r\n    const options = filterKey === 'employees' ? employees : selectOptions;\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [filtredOptions, setFiltredOptions] = useState(options);\r\n\r\n    const handeSearchChange = ({ target: { value } }) => {\r\n        setSearchValue(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (\r\n            filterKey === 'employees' &&\r\n            JSON.stringify(searchFilters) === JSON.stringify(JOB_FILTERS)\r\n        ) {\r\n            setFiltredOptions([]);\r\n        } else {\r\n            setFiltredOptions(filterName(searchValue, options));\r\n        }\r\n    }, [searchValue]);\r\n\r\n    const numberOfElements = options.length;\r\n    const listHeight = numberOfElements * ELEMENT_HEIGHT + OFFSET;\r\n    const listFixedHeight =\r\n        listHeight >= MAX_LIST_HEIGHT ? MAX_LIST_HEIGHT : listHeight;\r\n    const dropdownHeight = INITIAL_HEIGHT + listFixedHeight;\r\n\r\n    const filtredOptionsLength = filtredOptions.length;\r\n    const selectedOptionsLength = selectedOptions.length;\r\n    const areOptionsEqual = filtredOptionsLength === selectedOptionsLength;\r\n\r\n    const handleAllOptionsSelect = () => {\r\n        if (!areOptionsEqual) {\r\n            setSelectedOptions(filtredOptions);\r\n        } else {\r\n            setSelectedOptions([]);\r\n        }\r\n    };\r\n\r\n    const handleSingleOptionSelect = (el) => {\r\n        const index = selectedOptions.indexOf(el);\r\n\r\n        if (index > -1) {\r\n            const updatedOptions = [...selectedOptions];\r\n            updatedOptions.splice(index, 1);\r\n\r\n            setSelectedOptions(updatedOptions);\r\n        } else {\r\n            const updatedOptions = [...selectedOptions, el];\r\n\r\n            setSelectedOptions(updatedOptions);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"multiselect-dropdown\"\r\n            style={{ height: `${dropdownHeight}px` }}\r\n        >\r\n            <div className=\"multiselect-dropdown__element\">\r\n                <TextInput\r\n                    placeholder=\"Szukaj...\"\r\n                    isDropdown\r\n                    handeNameSearchChange={handeSearchChange}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"multiselect-dropdown__element\"\r\n                onClick={handleAllOptionsSelect}\r\n            >\r\n                <Checkbox\r\n                    element=\"Wszystkie\"\r\n                    isChecked={areOptionsEqual && filtredOptionsLength}\r\n                />\r\n            </div>\r\n\r\n            <ul\r\n                className={`multiselect-dropdown__list ${\r\n                    !filtredOptionsLength\r\n                        ? 'multiselect-dropdown__list--empty'\r\n                        : undefined\r\n                }`}\r\n                style={{ height: `${listFixedHeight}px` }}\r\n            >\r\n                {filtredOptionsLength\r\n                    ? filtredOptions.map((el) => {\r\n                          const elementName = el?.name ? el.name : el;\r\n                          return (\r\n                              <li\r\n                                  key={elementName}\r\n                                  className=\"multiselect-dropdown__element\"\r\n                                  onClick={() => handleSingleOptionSelect(el)}\r\n                              >\r\n                                  <Checkbox\r\n                                      element={el}\r\n                                      isChecked={selectedOptions.includes(el)}\r\n                                  />\r\n                              </li>\r\n                          );\r\n                      })\r\n                    : 'Brak elementów'}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiselectDropdown;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MultiselectDropdown from '../../inputs/multiselect-dropdown/multiselect-dropdown.component';\r\nimport Icon from '../../../shared/icon/icon.component';\r\nimport { ICONS_NAMES, JOB_FILTERS } from '../../../../mock-data/mock.data';\r\nimport './modal-multiselect.styles.scss';\r\nimport Checkbox from '../../inputs/checkbox/checkbox.component';\r\n\r\nconst ModalMultiselect = ({\r\n    title,\r\n    options,\r\n    setModalRule,\r\n    isAnyModalOpen,\r\n    filterKey,\r\n    updateFilterValues,\r\n    searchFilters,\r\n    filtredRecords,\r\n    filtredEmployees,\r\n}) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n    const openDropdown = () => {\r\n        setIsDropdownOpen(true);\r\n        setModalRule(true);\r\n    };\r\n\r\n    const closeDropdown = () => {\r\n        if (isDropdownOpen) {\r\n            setIsDropdownOpen(false);\r\n            setModalRule(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateFilterValues(filterKey, selectedOptions);\r\n    }, [selectedOptions]);\r\n\r\n    const getInputValue = () => {\r\n        const selectedOptionsLength = selectedOptions.length;\r\n\r\n        if (selectedOptionsLength) {\r\n            if (\r\n                filterKey === 'employees' &&\r\n                JSON.stringify(searchFilters) === JSON.stringify(JOB_FILTERS)\r\n            ) {\r\n                setSelectedOptions([]);\r\n                return 'Wybierz';\r\n            }\r\n\r\n            if (\r\n                filterKey === 'employees' &&\r\n                !selectedOptions.every((val) => filtredRecords.includes(val))\r\n            ) {\r\n                setSelectedOptions([]);\r\n            }\r\n\r\n            const fixOptions = (option) =>\r\n                typeof option === 'object' ? option.name : option;\r\n\r\n            const firstOption = fixOptions(selectedOptions[0]);\r\n            switch (selectedOptionsLength) {\r\n                case 1:\r\n                    return `${firstOption}`;\r\n                case 2:\r\n                    return `${firstOption}, ${fixOptions(selectedOptions[1])}`;\r\n                default:\r\n                    return `${firstOption}, ${fixOptions(\r\n                        selectedOptions[1]\r\n                    )} +${selectedOptionsLength - 2}`;\r\n            }\r\n        } else {\r\n            return 'Wybierz';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-multiselect\">\r\n            <div\r\n                className=\"modal-multiselect__texts-container\"\r\n                onClick={isAnyModalOpen ? closeDropdown : openDropdown}\r\n            >\r\n                <span className=\"modal-multiselect__description\">{title}</span>\r\n                <div className=\"modal-multiselect__value-container\">\r\n                    <div className=\"modal-multiselect__value\">\r\n                        {getInputValue()}\r\n                    </div>\r\n                    <Icon\r\n                        iconName={ICONS_NAMES.SORT}\r\n                        customCSSClass={ICONS_NAMES.SORT}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {isDropdownOpen && (\r\n                <MultiselectDropdown\r\n                    selectOptions={options}\r\n                    employees={filtredRecords}\r\n                    selectedOptions={selectedOptions}\r\n                    setSelectedOptions={setSelectedOptions}\r\n                    searchFilters={searchFilters}\r\n                    filterKey={filterKey}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nModalMultiselect.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.oneOfType(\r\n            PropTypes.string,\r\n            PropTypes.shape({\r\n                id: PropTypes.number.isRequired,\r\n                name: PropTypes.string.isRequired,\r\n                date: PropTypes.instanceOf(Date).isRequired,\r\n                job: PropTypes.string.isRequired,\r\n                agreement: PropTypes.string.isRequired,\r\n                locations: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n            })\r\n        )\r\n    ).isRequired,\r\n    setModalRule: PropTypes.func,\r\n    isAnyModalOpen: PropTypes.bool,\r\n    updateFilterValues: PropTypes.func.isRequired,\r\n    filterKey: PropTypes.string.isRequired,\r\n};\r\n\r\nModalMultiselect.defaultProps = {\r\n    setModalRule: () => {},\r\n    isAnyModalOpen: false,\r\n    filtredEmployees: [],\r\n    filtredRecords: [],\r\n};\r\n\r\nexport default ModalMultiselect;\r\n","export const enPlMonths = {\r\n    January: 'Styczeń',\r\n    February: 'Luty',\r\n    March: 'Marzec',\r\n    April: 'Kwiecień',\r\n    May: 'Maj',\r\n    June: 'Czerwiec',\r\n    July: 'Lipiec',\r\n    August: 'Sierpień',\r\n    September: 'Wrzesień',\r\n    October: 'Październik',\r\n    November: 'Listopad',\r\n    December: 'Grudzień',\r\n};\r\n\r\nexport const getColors = (isSelected, isSelectedStartOrEnd) => {\r\n    return ({ selectedFirstOrLastColor, normalColor, selectedColor }) => {\r\n        if (isSelectedStartOrEnd) {\r\n            return selectedFirstOrLastColor;\r\n        }\r\n        if (isSelected) {\r\n            return selectedColor;\r\n        }\r\n        return normalColor;\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nexport const datepickerContextDefaultValue = {\r\n    focusedDate: null,\r\n    isDateFocused: () => false,\r\n    isDateSelected: () => false,\r\n    isDateHovered: () => false,\r\n    isDateBlocked: () => false,\r\n    isFirstOrLastSelectedDate: () => false,\r\n    onDateFocus: () => {},\r\n    onDateHover: () => {},\r\n    onDateSelect: () => {},\r\n};\r\n\r\nexport default React.createContext(datepickerContextDefaultValue);\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDay } from '@datepicker-react/hooks';\r\nimport DatepickerContext from '../date-picker.context';\r\nimport { getColors } from '../helpers';\r\nimport './date-picker-day.styles.scss';\r\n\r\nconst COLORS = {\r\n    WHITE: '#ffffff',\r\n    BLACK: '#000000',\r\n    GREY: '#fbfbfb',\r\n    PRIMARY_ORANGE: '#ff6b01',\r\n    SECONDARY_ORANGE: '#ffac71',\r\n};\r\n\r\nconst Day = ({ dayLabel, date }) => {\r\n    const contextValues = useContext(DatepickerContext);\r\n    const { isSelected, isSelectedStartOrEnd, onClick } = useDay({\r\n        date,\r\n        ...contextValues,\r\n    });\r\n\r\n    const getTrueColor = getColors(isSelected, isSelectedStartOrEnd);\r\n\r\n    return (\r\n        <>\r\n            {dayLabel ? (\r\n                <button\r\n                    onClick={onClick}\r\n                    type=\"button\"\r\n                    className=\"day-button\"\r\n                    style={{\r\n                        color: getTrueColor({\r\n                            selectedFirstOrLastColor: COLORS.WHITE,\r\n                            normalColor: COLORS.BLACK,\r\n                            selectedColor: COLORS.WHITE,\r\n                        }),\r\n                        background: getTrueColor({\r\n                            selectedFirstOrLastColor: COLORS.PRIMARY_ORANGE,\r\n                            normalColor: COLORS.WHITE,\r\n                            selectedColor: COLORS.SECONDARY_ORANGE,\r\n                        }),\r\n                    }}\r\n                >\r\n                    {dayLabel}\r\n                </button>\r\n            ) : (\r\n                <div />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nDay.propTypes = {\r\n    dayLabel: PropTypes.string,\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n};\r\n\r\nDay.defaultProps = {\r\n    dayLabel: '',\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useMonth } from '@datepicker-react/hooks';\r\nimport { enPlMonths } from '../helpers';\r\nimport Day from '../date-picker-day/date-picker-day.component';\r\nimport './date-picker-month.styles.scss';\r\n\r\nconst Month = ({ year, month, firstDayOfWeek }) => {\r\n    const { days, monthLabel } = useMonth({\r\n        year,\r\n        month,\r\n        firstDayOfWeek,\r\n    });\r\n\r\n    const weekdayLabels = ['Pon', 'Wto', 'Śro', 'Czw', 'Pią', 'Sob', 'Nie'];\r\n\r\n    const convertMonthLabelToPl = (label = monthLabel) => {\r\n        const splitedDate = label.split(' ');\r\n        const convertedMonth = enPlMonths[splitedDate[0]];\r\n        const endDate = `${convertedMonth} ${splitedDate[1]}`;\r\n\r\n        return endDate;\r\n    };\r\n\r\n    return (\r\n        <div className=\"month\">\r\n            <div className=\"month__month-label\">\r\n                <strong>{convertMonthLabelToPl()}</strong>\r\n            </div>\r\n            <div className=\"month__day-container\">\r\n                {weekdayLabels.map((dayLabel) => (\r\n                    <div className=\"month__day-label\" key={dayLabel}>\r\n                        {dayLabel}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"month__day-space\">\r\n                {days.map((day, index) =>\r\n                    day ? (\r\n                        <Day\r\n                            date={day.date}\r\n                            key={day.date.toString()}\r\n                            dayLabel={day.dayLabel}\r\n                        />\r\n                    ) : (\r\n                        <div key={index} />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMonth.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    firstDayOfWeek: PropTypes.number.isRequired,\r\n};\r\nexport default Month;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '../../../../shared/icon/icon.component';\r\nimport './date-picker-nav.styles.scss';\r\n\r\nconst NavButton = ({ iconName, onClick }) => (\r\n    <button className=\"nav-button\" type=\"button\" onClick={onClick}>\r\n        <Icon iconName={iconName} customCSSClass={iconName} />\r\n    </button>\r\n);\r\n\r\nNavButton.propTypes = {\r\n    iconName: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nNavButton.defaultProps = {\r\n    onClick: () => {},\r\n};\r\n\r\nexport default NavButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDatepicker } from '@datepicker-react/hooks';\r\nimport Month from './date-picker-month/date-picker-month.component';\r\nimport NavButton from './date-picker-nav/date-picker-nav.component';\r\nimport { ICONS_NAMES } from '../../../../mock-data/mock.data';\r\nimport DatepickerContext from './date-picker.context';\r\nimport './date-picker.styles.scss';\r\n\r\nconst DatePicker = ({\r\n    pickerState: { startDate, endDate, focusedInput },\r\n    handleDateChange,\r\n    closeDropdown,\r\n    clearDatePicker,\r\n}) => {\r\n    const {\r\n        firstDayOfWeek,\r\n        activeMonths,\r\n        isDateSelected,\r\n        isDateHovered,\r\n        isFirstOrLastSelectedDate,\r\n        isDateBlocked,\r\n        isDateFocused,\r\n        focusedDate,\r\n        onDateHover,\r\n        onDateSelect,\r\n        onDateFocus,\r\n        goToPreviousMonthsByOneMonth,\r\n        goToNextMonthsByOneMonth,\r\n    } = useDatepicker({\r\n        startDate,\r\n        endDate,\r\n        focusedInput,\r\n        onDatesChange: handleDateChange,\r\n    });\r\n\r\n    const currentMonth = activeMonths[0].month;\r\n    const validateNavigation = (month, fnc) =>\r\n        currentMonth === month ? null : fnc;\r\n\r\n    const MIN_MONTH = 0;\r\n    const MAX_MONTH = 11;\r\n\r\n    return (\r\n        <DatepickerContext.Provider\r\n            value={{\r\n                focusedDate,\r\n                isDateFocused,\r\n                isDateSelected,\r\n                isDateHovered,\r\n                isDateBlocked,\r\n                isFirstOrLastSelectedDate,\r\n                onDateSelect,\r\n                onDateFocus,\r\n                onDateHover,\r\n            }}\r\n        >\r\n            <div className=\"date-picker\">\r\n                <div className=\"date-picker__controls-container\">\r\n                    <div\r\n                        onClick={clearDatePicker}\r\n                        className=\"date-picker__control\"\r\n                    >\r\n                        Wyczyść\r\n                    </div>\r\n                    <div\r\n                        onClick={closeDropdown}\r\n                        className=\"date-picker__control\"\r\n                    >\r\n                        Zamknij\r\n                    </div>\r\n                </div>\r\n\r\n                <Month\r\n                    year={2020}\r\n                    month={currentMonth}\r\n                    firstDayOfWeek={firstDayOfWeek}\r\n                />\r\n                <div className=\"date-picker__butons-container\">\r\n                    <NavButton\r\n                        iconName={ICONS_NAMES.PREVIOUS}\r\n                        onClick={validateNavigation(\r\n                            MIN_MONTH,\r\n                            goToPreviousMonthsByOneMonth\r\n                        )}\r\n                    />\r\n                    <NavButton\r\n                        iconName={ICONS_NAMES.NEXT}\r\n                        onClick={validateNavigation(\r\n                            MAX_MONTH,\r\n                            goToNextMonthsByOneMonth\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </DatepickerContext.Provider>\r\n    );\r\n};\r\n\r\nDatePicker.propTypes = {\r\n    pickerState: PropTypes.shape({\r\n        startDate: PropTypes.instanceOf(Date),\r\n        endDate: PropTypes.instanceOf(Date),\r\n        focusedInput: PropTypes.string,\r\n    }).isRequired,\r\n    handleDateChange: PropTypes.func.isRequired,\r\n    closeDropdown: PropTypes.func,\r\n    clearDatePicker: PropTypes.func.isRequired,\r\n};\r\n\r\nDatePicker.defaultProps = {\r\n    closeDropdown: () => {},\r\n};\r\n\r\nexport default DatePicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { START_DATE } from '@datepicker-react/hooks';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from '../../inputs/date-picker/date-picker.component';\r\nimport Icon from '../../../shared/icon/icon.component';\r\nimport { ICONS_NAMES } from '../../../../mock-data/mock.data';\r\nimport './modal-date.styles.scss';\r\n\r\nconst INITIAL_PICKER_STATE = {\r\n    startDate: null,\r\n    endDate: null,\r\n    focusedInput: START_DATE,\r\n};\r\n\r\nconst ModalDate = ({ setModalRule, isAnyModalOpen, updateFilterValues }) => {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [pickerState, setPickerState] = useState(INITIAL_PICKER_STATE);\r\n\r\n    // dropdown handlers\r\n    const openDropdown = () => {\r\n        setIsDropdownOpen(true);\r\n        setModalRule(true);\r\n    };\r\n\r\n    const closeDropdown = () => {\r\n        if (isDropdownOpen) {\r\n            setIsDropdownOpen(false);\r\n            setModalRule(false);\r\n        }\r\n    };\r\n\r\n    // date handlers\r\n    const handleDateChange = (data) => {\r\n        if (!data.focusedInput) {\r\n            setPickerState({ ...data, focusedInput: START_DATE });\r\n        } else {\r\n            setPickerState(data);\r\n        }\r\n    };\r\n\r\n    const clearDatePicker = () => {\r\n        setPickerState(INITIAL_PICKER_STATE);\r\n    };\r\n\r\n    const { startDate, endDate } = pickerState;\r\n\r\n    useEffect(() => {\r\n        updateFilterValues('date', { startDate, endDate });\r\n    }, [pickerState]);\r\n\r\n    const transformDate = (date) => {\r\n        if (date instanceof Date) {\r\n            const day = date.getDate();\r\n            const month = date.getMonth() + 1;\r\n\r\n            return `${day}.${month < 10 ? `0${month}` : month}`;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const inputValue = startDate\r\n        ? `${transformDate(startDate)}-${transformDate(endDate)}`\r\n        : 'Wybierz';\r\n\r\n    const canDropdownBeClosed =\r\n        (isAnyModalOpen && endDate) ||\r\n        (isAnyModalOpen && !startDate && !endDate);\r\n    return (\r\n        <div className=\"modal-date\">\r\n            <div\r\n                className=\"modal-date__texts-container\"\r\n                onClick={canDropdownBeClosed ? closeDropdown : openDropdown}\r\n            >\r\n                <Icon\r\n                    iconName={ICONS_NAMES.CALENDAR}\r\n                    customCSSClass={ICONS_NAMES.CALENDAR}\r\n                />\r\n\r\n                <div className=\"modal-date__value-container\">\r\n                    <span className=\"modal-date__description\">Okres</span>\r\n                    <div className=\"modal-date__value\">{inputValue}</div>\r\n                </div>\r\n            </div>\r\n\r\n            {isDropdownOpen && (\r\n                <DatePicker\r\n                    handleDateChange={handleDateChange}\r\n                    pickerState={pickerState}\r\n                    closeDropdown={canDropdownBeClosed ? closeDropdown : null}\r\n                    clearDatePicker={clearDatePicker}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nModalDate.propTypes = {\r\n    setModalRule: PropTypes.func,\r\n    isAnyModalOpen: PropTypes.bool,\r\n    updateFilterValues: PropTypes.func.isRequired,\r\n};\r\n\r\nModalDate.defaultProps = {\r\n    setModalRule: () => {},\r\n    isAnyModalOpen: false,\r\n};\r\n\r\nexport default ModalDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './secondary-button.styles.scss';\r\n\r\nconst SecondaryButton = ({ children, buttonFunction, isDisabled }) => {\r\n    return (\r\n        <button\r\n            onClick={buttonFunction}\r\n            type=\"button\"\r\n            className=\"secondary-button\"\r\n            disabled={isDisabled}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nSecondaryButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    buttonFunction: PropTypes.func,\r\n    isDisabled: PropTypes.bool,\r\n};\r\n\r\nSecondaryButton.defaultProps = {\r\n    buttonFunction: () => {},\r\n    isDisabled: false,\r\n};\r\n\r\nSecondaryButton.defaultProps = {};\r\n\r\nexport default SecondaryButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalMultiselect from './modal-multiselect/modal-multiselect.component';\r\nimport ModalDate from './modal-date/modal-date.component';\r\nimport SecondaryButton from '../../shared/buttons/secondary-button/secondary-button.component';\r\nimport {\r\n    JOB_OPTIONS,\r\n    LOCATIONS_OPTIONS,\r\n    AGREEMENT_OPTIONS,\r\n    EMPLOYEES,\r\n} from '../../../mock-data/mock.data';\r\nimport './modal.styles.scss';\r\n\r\nconst Modal = ({\r\n    filterElements,\r\n    updateFilterValues,\r\n    employees,\r\n    searchFilters,\r\n    isEmployeeSelected,\r\n    filtredRecords,\r\n    filtredEmployees,\r\n}) => {\r\n    const [isAnyModalOpen, setIsAnyModalOpen] = useState(false);\r\n    const setModalRule = (rule) => {\r\n        setIsAnyModalOpen(rule);\r\n    };\r\n    return (\r\n        <div className=\"modal\">\r\n            <h2 className=\"modal__heading\">Wybierz pracowników</h2>\r\n\r\n            <div className=\"modal__select-container\">\r\n                <ModalDate\r\n                    setModalRule={setModalRule}\r\n                    isAnyModalOpen={isAnyModalOpen}\r\n                    updateFilterValues={updateFilterValues}\r\n                />\r\n                <ModalMultiselect\r\n                    title=\"Stanowiska\"\r\n                    options={JOB_OPTIONS}\r\n                    setModalRule={setModalRule}\r\n                    isAnyModalOpen={isAnyModalOpen}\r\n                    updateFilterValues={updateFilterValues}\r\n                    filterKey=\"jobs\"\r\n                />\r\n                <ModalMultiselect\r\n                    title=\"Lokalizacje\"\r\n                    options={LOCATIONS_OPTIONS}\r\n                    setModalRule={setModalRule}\r\n                    isAnyModalOpen={isAnyModalOpen}\r\n                    updateFilterValues={updateFilterValues}\r\n                    filterKey=\"locations\"\r\n                />\r\n                <ModalMultiselect\r\n                    title=\"Pracownicy\"\r\n                    options={EMPLOYEES}\r\n                    setModalRule={setModalRule}\r\n                    isAnyModalOpen={isAnyModalOpen}\r\n                    updateFilterValues={updateFilterValues}\r\n                    filterKey=\"employees\"\r\n                    searchFilters={searchFilters}\r\n                    filtredRecords={filtredRecords}\r\n                    filtredEmployees={filtredEmployees}\r\n                />\r\n                <ModalMultiselect\r\n                    title=\"Warunki zatrudnienia\"\r\n                    options={AGREEMENT_OPTIONS}\r\n                    setModalRule={setModalRule}\r\n                    isAnyModalOpen={isAnyModalOpen}\r\n                    updateFilterValues={updateFilterValues}\r\n                    filterKey=\"agreements\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"modal__button-container\">\r\n                <SecondaryButton\r\n                    buttonFunction={filterElements}\r\n                    isDisabled={!isEmployeeSelected}\r\n                >\r\n                    WYŚWIETL\r\n                </SecondaryButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    filterElements: PropTypes.func.isRequired,\r\n    updateFilterValues: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrimaryButton from '../shared/buttons/primary-button/primary-button.component';\r\nimport TextInput from './inputs/text-input/text-input.component';\r\nimport Table from './table/table.component';\r\nimport Modal from './modal/modal.component';\r\nimport Backdrop from '../shared/backdrop/backdrop.component';\r\nimport { EMPLOYEES, INITIAL_FILTERS } from '../../mock-data/mock.data';\r\nimport { filterName, filterThroughFilters } from './helpers';\r\nimport './main.styles.scss';\r\n\r\nconst Main = () => {\r\n    const [isFiltersModalOpen, setIsFiltersModalOpen] = useState(false);\r\n    const [isTableVisible, setIsTableVisible] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // primary name state\r\n    const [nameSearchValue, setNameSearchValue] = useState('');\r\n\r\n    // filters state\r\n    const [searchFilters, setSearchFilters] = useState(INITIAL_FILTERS);\r\n    const [filtredRecords, setFiltredRecords] = useState([]);\r\n\r\n    // table data\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    // component handlers\r\n    const openFiltersModal = () => {\r\n        setIsFiltersModalOpen(true);\r\n    };\r\n\r\n    const closeFiltersModal = () => {\r\n        setIsFiltersModalOpen(false);\r\n    };\r\n\r\n    const displayTable = () => {\r\n        setIsLoading(true);\r\n\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n            setIsTableVisible(true);\r\n        }, 1000);\r\n    };\r\n\r\n    const hideTable = () => {\r\n        setIsTableVisible(false);\r\n    };\r\n\r\n    // modal display handlers\r\n\r\n    const startFilters = () => {\r\n        setNameSearchValue('');\r\n        openFiltersModal();\r\n    };\r\n\r\n    const filterElements = () => {\r\n        setTableData(searchFilters.employees);\r\n        closeFiltersModal();\r\n        displayTable();\r\n    };\r\n\r\n    // name search handlers\r\n\r\n    const handeNameSearchChange = ({ target: { value } }) => {\r\n        setNameSearchValue(value);\r\n    };\r\n\r\n    const handleKeypress = ({ key }) => {\r\n        if (key === 'Enter') {\r\n            displayTable();\r\n        }\r\n    };\r\n\r\n    // filters change handlers\r\n\r\n    const updateFilterValues = (filterKey, value) => {\r\n        if (filterKey === 'date') {\r\n            setSearchFilters({\r\n                ...searchFilters,\r\n                date: value,\r\n            });\r\n        } else {\r\n            setSearchFilters({ ...searchFilters, [filterKey]: value });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTableData(filterName(nameSearchValue, EMPLOYEES));\r\n    }, [nameSearchValue]);\r\n\r\n    useEffect(() => {\r\n        setFiltredRecords(filterThroughFilters(searchFilters, EMPLOYEES));\r\n    }, [searchFilters]);\r\n\r\n    const resetFiltredNames = () => {\r\n        hideTable();\r\n        setNameSearchValue('');\r\n        setSearchFilters(INITIAL_FILTERS);\r\n    };\r\n\r\n    const transformDate = (date) => {\r\n        if (date instanceof Date) {\r\n            const day = date.getDate();\r\n            const month = date.getMonth() + 1;\r\n            const year = date.getFullYear();\r\n\r\n            return `${day}/${month < 10 ? `0${month}` : month}/${year}`;\r\n        }\r\n        return '-';\r\n    };\r\n\r\n    const displayFilterValues = (arr) => {\r\n        if (arr.length) {\r\n            return arr.map((el, index) =>\r\n                index === arr.length - 1 ? el : `${el}, `\r\n            );\r\n        }\r\n        return '-';\r\n    };\r\n\r\n    return (\r\n        <article className=\"main\">\r\n            {isTableVisible ? (\r\n                <section className=\"main__section-middle\">\r\n                    <Table data={tableData} />\r\n                    <PrimaryButton buttonFunction={resetFiltredNames}>\r\n                        PONÓW\r\n                    </PrimaryButton>\r\n                    <div>\r\n                        Użyto następujących filtrów:\r\n                        <br />\r\n                        Data początkowa:\r\n                        {transformDate(searchFilters.date.startDate)} <br />\r\n                        Data końcowa:{' '}\r\n                        {transformDate(searchFilters.date.endDate)} <br />\r\n                        Stanowiska: {displayFilterValues(searchFilters.jobs)}\r\n                        <br />\r\n                        Lokalizacje:{' '}\r\n                        {displayFilterValues(searchFilters.locations)}\r\n                        <br />\r\n                        Typ zatrudnienia:\r\n                        {displayFilterValues(searchFilters.agreements)}\r\n                        <br />\r\n                    </div>\r\n                </section>\r\n            ) : (\r\n                <section className=\"main__section-top\">\r\n                    <div className=\"main__input-container\">\r\n                        <TextInput\r\n                            placeholder=\"Wyszukaj po imieniu i nazwisku...\"\r\n                            handeNameSearchChange={handeNameSearchChange}\r\n                            handleKeypress={handleKeypress}\r\n                        />\r\n                    </div>\r\n                    <div className=\"main__buttons-container\">\r\n                        <PrimaryButton buttonFunction={displayTable}>\r\n                            SZUKAJ\r\n                        </PrimaryButton>\r\n                        <PrimaryButton buttonFunction={startFilters}>\r\n                            FILTRUJ\r\n                        </PrimaryButton>\r\n                    </div>\r\n                </section>\r\n            )}\r\n\r\n            {isFiltersModalOpen && (\r\n                <section>\r\n                    <Modal\r\n                        filterElements={filterElements}\r\n                        updateFilterValues={updateFilterValues}\r\n                        searchFilters={{\r\n                            date: searchFilters.date,\r\n                            jobs: searchFilters.jobs,\r\n                            locations: searchFilters.locations,\r\n                            agreements: searchFilters.agreements,\r\n                        }}\r\n                        isEmployeeSelected={!!searchFilters.employees.length}\r\n                        filtredEmployees={searchFilters.employees}\r\n                        filtredRecords={filtredRecords}\r\n                    />\r\n                    <Backdrop closeFunction={closeFiltersModal} />\r\n                </section>\r\n            )}\r\n\r\n            {isLoading && (\r\n                <section>\r\n                    <Backdrop>Loading...</Backdrop>\r\n                </section>\r\n            )}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Navigation from './components/navigation/navigation.component';\nimport Main from './components/main/main.component';\nimport './App.scss';\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <Navigation />\n            <Main />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}